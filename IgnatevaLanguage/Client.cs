//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IgnatevaLanguage
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Client
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Client()
        {
            this.ClientService = new HashSet<ClientService>();
            this.Tag = new HashSet<Tag>();
        }
    
        public int ID { get; set; }
        public string LastName { get; set; }
        public string FirstName { get; set; }
        public string Patronymic { get; set; }
        public string GenderCode { get; set; }
        public string Phone { get; set; }
        public string PhotoPath { get; set; }
        public System.DateTime Birthday { get; set; }

        public string BirthdayString
        {
            get
            {
                if (Birthday != null)
                    return Birthday.ToShortDateString();
                else
                    return "";
            }
        }


        public string Email { get; set; }
        public System.DateTime RegistrationDate { get; set; }
    
        public string RegistrationDateString
        {
            get
            {
                if (RegistrationDate != null)
                    return RegistrationDate.ToShortDateString();
                else
                    return "";
            }
        }

        public virtual Gender Gender { get; set; }

        public string GenderName
        {
            get
            {
                return Gender.Name;
            }
        }

        //строковая дата последнего посещения
        public string LatestVisitDateString
        {
            get
            {
                var visitRecords = ClientService.Where(p => p.ClientID == this.ID).ToList();
                if (visitRecords != null && visitRecords.Any())
                {
                    DateTime latestVisitDate = visitRecords.Max(p => p.StartTime);
                    return latestVisitDate.Date.ToShortDateString();
                }
                else return "нет";
            }
        }

        //дата последнего посещения
        public DateTime? LatestVisitDate
        {
            get
            {
                var visitRecords = ClientService.Where(p => p.ClientID == this.ID).ToList();
                if (visitRecords != null && visitRecords.Any())
                {
                    DateTime latestVisitDate = visitRecords.Max(p => p.StartTime);
                    return latestVisitDate.Date;
                }
                else return null;
            }
        }



        //кол-во посещений
        public int VisitCount
        {
            get
            {
                var datelist = ClientService.Where(p => p.ClientID == this.ID).ToList();
                return datelist.Count;
            }
        }


        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClientService> ClientService { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Tag> Tag { get; set; }
    }
}
